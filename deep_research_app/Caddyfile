deep-research-tool.online {
    # Enable automatic HTTPS via Let's Encrypt (default)
    # Optional: Specify email for ACME account
    # tls your-email@example.com

    # Logging (adjust as needed)
    log {
        output file /var/log/caddy/deep_research_access.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h # 30 days
        }
        format json # Structured JSON format for easier parsing
        level INFO  # Or ERROR for less noise
    }

    # Recommended: Enable compression
    encode gzip zstd

    # Recommended: Security Headers
    header {
        # Enable HTTP Strict Transport Security (HSTS)
        # IMPORTANT: Uncomment ONLY after confirming HTTPS works perfectly.
        # Start with a short max-age (e.g., 60 seconds) for testing.
        # Then increase gradually (e.g., to 31536000 = 1 year).
        # Strict-Transport-Security "max-age=60; includeSubDomains; preload" always

        X-Frame-Options "SAMEORIGIN" always
        X-Content-Type-Options "nosniff" always
        Referrer-Policy "strict-origin-when-cross-origin" always
        # Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' https://cdn.jsdelivr.net; font-src 'self'; img-src 'self'; frame-ancestors 'none';" # Example CSP - Needs careful tuning!
        Permissions-Policy "geolocation=(), microphone=(), camera=(), midi=(), magnetometer=(), gyroscope=(), payment=(), usb=()" always
        # Remove Caddy's Server signature (optional obfuscation)
        -Server
    }

    # Serve static files directly for better performance
    handle_path /static/* {
        root * ./deep_research_app/static
        file_server
    }

    # Reverse proxy requests to the Gunicorn backend
    # Assumes Gunicorn is running on localhost port 8000
    handle {
        reverse_proxy localhost:8000 {
             # Optional: Set headers to pass client info to backend
             header_up X-Real-IP {remote_host}
             header_up X-Forwarded-For {remote_host}
             header_up X-Forwarded-Proto {scheme}
             header_up Host {Get-host}

             # Tweak buffering if needed for SSE (Caddy v2 usually handles this well)
             # flush_interval -1 # Disable response buffering (check Caddy docs)
        }
    }
}

www.deep-research-tool.online {
    redir https://deep-research-tool.online{uri} permanent
}

dev.deep-research-tool.online {
    # Enable automatic HTTPS via Let's Encrypt (default)
    # Optional: Specify email for ACME account
    # tls your-email@example.com

    # Logging (adjust as needed)
    log {
        output file /var/log/caddy/deep_research_access.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h # 30 days
        }
        format json # Structured JSON format for easier parsing
        level INFO  # Or ERROR for less noise
    }

    # Recommended: Enable compression
    encode gzip zstd

    # Recommended: Security Headers
    header {
        # Enable HTTP Strict Transport Security (HSTS)
        # IMPORTANT: Uncomment ONLY after confirming HTTPS works perfectly.
        # Start with a short max-age (e.g., 60 seconds) for testing.
        # Then increase gradually (e.g., to 31536000 = 1 year).
        # Strict-Transport-Security "max-age=60; includeSubDomains; preload" always

        X-Frame-Options "SAMEORIGIN" always
        X-Content-Type-Options "nosniff" always
        Referrer-Policy "strict-origin-when-cross-origin" always
        # Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' https://cdn.jsdelivr.net; font-src 'self'; img-src 'self'; frame-ancestors 'none';" # Example CSP - Needs careful tuning!
        Permissions-Policy "geolocation=(), microphone=(), camera=(), midi=(), magnetometer=(), gyroscope=(), payment=(), usb=()" always
        # Remove Caddy's Server signature (optional obfuscation)
        -Server
    }

    # Serve static files directly for better performance
    handle_path /static/* {
        root * ./deep_research_app/static
        file_server
    }

    # Reverse proxy requests to the Gunicorn backend
    # Assumes Gunicorn is running on localhost port 8000
    handle {
        reverse_proxy localhost:8001 {
             # Optional: Set headers to pass client info to backend
             header_up X-Real-IP {remote_host}
             header_up X-Forwarded-For {remote_host}
             header_up X-Forwarded-Proto {scheme}
             header_up Host {Get-host}

             # Tweak buffering if needed for SSE (Caddy v2 usually handles this well)
             # flush_interval -1 # Disable response buffering (check Caddy docs)
        }
    }
}

# deep-research.mooo.com {
#     # Optional: Enable better logging (logs to systemd journal by default)
#     log {
#         output stderr
#         format console
#     }

#     # Recommended: Enable compression for faster loading
#     encode gzip zstd

#     # Recommended: Add useful security headers
#     header {
#         # Enable HTTP Strict Transport Security (HSTS) - Tells browsers
#         # Be sure HTTPS is working reliably before uncommenting the full
#         # Start with a short max-age for testing if unsure.
#         # Strict-Transport-Security "max-age=31536000;" always
#         X-Frame-Options "SAMEORIGIN" always
#         X-Content-Type-Options "nosniff" always
#         Referrer-Policy "strict-origin-when-cross-origin" always
#         # Remove Caddy's Server signature
#         -Server
#     }

#     # The essential part: Reverse proxy to your Gunicorn app running on port 8000 (assuming it uses the same backend)
#     reverse_proxy localhost:8000
# }

# www.deep-research.mooo.com {
#     redir https://deep-research.mooo.com{uri} permanent
# }

macros-counter.mooo.com {
    # Optional: Enable better logging
    log {
        output stderr
        format console
    }

    # Recommended: Enable compression
    encode gzip zstd

# Recommended: Add security headers
    header {
        X-Frame-Options "SAMEORIGIN" always
        X-Content-Type-Options "nosniff" always
        Referrer-Policy "strict-origin-when-cross-origin" always
        -Server
    }

    # Reverse proxy to the macros-counter app on port 4000
    reverse_proxy localhost:4000
}

www.macros-counter.mooo.com {
    redir https://macros-counter.mooo.com{uri} permanent
}